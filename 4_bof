# @c Copyright (C) 2014 
# @c Free Software Foundation, Inc.
# @c See the file README for copying conditions.

import os
from modules.features.BofExtractor import BofExtractor

def processLabel(pathDirImagesBase, pathDirDatasets, bofExtractor, pathDirBofs, datasetLabel):
    
    # Directory where the images are located
    pathDirImages = os.path.join( pathDirImagesBase, datasetLabel ) 
    if not os.path.exists(pathDirImages):
        print 'ERROR: Directory not found ' + pathDirImages
        return
     
    # File containing the image IDs   
    pathFileDataset = os.path.join( pathDirDatasets, datasetLabel+'.txt' )
    if not os.path.exists(pathFileDataset):
        print 'ERROR: File not found ' + pathFileDataset
        return    
        
    print 'Extracting BoF from ' + pathFileDataset + "..."

    # Directory for BoFs
    pathDirBofLabel = os.path.join( pathDirBofs, datasetLabel )    
    if not os.path.exists(pathDirBofLabel):
        os.makedirs(pathDirBofLabel)
        
    bofExtractor.processTxtFile( pathFileDataset, pathDirImages, 'jpg', pathDirBofLabel)
    
    
# Main
if __name__ == "__main__":
    pathHome = os.path.expanduser('~')
    pathWork = os.path.join( pathHome,'Project')
    pathDirImagesBase = os.path.join(pathWork, 'Images')
    pathDirDatasets = os.path.join(pathWork, 'Datasets')
    pathFileVocabulary = os.path.join( pathWork, 'Vocabulary','vocabulary.p' )
    pathDirBofs = os.path.join(pathWork, 'Bof')
        
    # Init the BoF extractor
    bofExtractor = BofExtractor(pathFileVocabulary, flagVerbose=False)
    
    # Process the train dataset
    processLabel(pathDirImagesBase, pathDirDatasets, bofExtractor, pathDirBofs, 'Train')
    
    # Process the test dataset
    processLabel(bofExtractor, pathDirBofs, 'Test')
    
    print "Extracting BoF... done."
